function preload() {

    game.load.baseURL = 'http://examples.phaser.io/assets/';
    game.load.crossOrigin = 'anonymous';

    game.load.image('phaser', 'sprites/phaser-dude.png');
    game.load.image('orb', 'sprites/orb-red.png');

}





var jump = -400;
var scoreText;
var score = 0;
var orb;
var arrows; 
var sprite;
var speed = 100;
function create() {
    scoreText = game.add.text(20,100,"score:"+score, {fill: "#FFFFFF",font:"16px Arial",align:"center"});
    game.stage.backgroundColor = "#FF0000";
    
    game.physics.startSystem(Phaser.Physics.Arcade);
    game.physics.arcade.gravity.y = function preload() {

    game.load.baseURL = 'http://examples.phaser.io/assets/';
    game.load.crossOrigin = 'anonymous';

    game.load.image('phaser', 'sprites/phaser-dude.png');
    game.load.image('orb', 'sprites/orb-red.png');
    75;
    };

    orb = game.add.sprite (600,180,'orb');
    orb.anchor.setTo(0.5, 0.5);
    game.physics.arcade.enable(orb);
    orb.body.allowGravity = false;
    
    sprite = game.add.sprite(400, 300, 'phaser');
    game.physics.arcade.enable(sprite);
    sprite.body.collideWorldBounds = true;
    arrows = game.input.keyboard.createCursorKeys();
    
    

}






function update()  
{
checkKeys();
    
animateOrb(orb,150);
game.physics.arcade.overlap (sprite,orb,miam,null,this);

}

function miam(a,b)
{
    var newx = game.rnd.integerInRange(0,800);
    var newy = game.rnd.integerInRange(0,600);
    console.log("miam");
    b.reset(newx,newy);
    score = score + 1;
    scoreText.text = "score:"+score; 
    
}



function animateOrb (myOrb,speedOrb)
{
    myOrb.body.angularVelocity = speedOrb;
}

function checkKeys()
{
    if(arrows.left.isDown) {
      //  sprite.x = sprite.x - speed;
        sprite.body.velocity.x = -speed;
    }else if (arrows.right.isDown){
    //    sprite.x = sprite.x + speed;
        sprite.body.velocity.x = +speed;
    }

    if(arrows.up.downDuration(50)){
        sprite.body.velocity.y = jump;
    }
}






function render() {
    game.debug.body(orb);
game.debug.body(sprite);
}
